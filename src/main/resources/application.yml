# Embedded Tomcat Configuration
server:
  port: 8080
  shutdown: graceful
  tomcat: 
    use-relative-redirects: true
  servlet:
    context-path: /api
    session:
      timeout: 3600
    encoding:
      charset: utf-8
      enabled: true
      force: false
  # 응답에 exception 내용을 포함할지 여부
  error:
    include-exception : true
    include-stacktrace: never
    #path : /error
    # 오류시 기본으로 노출 페이지를 사용할지 여부
    whitelabel.enabled : true

spring:
  application:
    name: DUMMY
  banner:
    location: classpath:banner
  # FileUpload
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
  messages:
    basename : message
    encoding : UTF-8
  pid:
    file: ./${spring.application.name}.pid
  # datasource:
  #   driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
  #   url: jdbc:log4jdbc:postgresql://localhost:5432/dpla
  #   hikari:
  #     username: ENC(o4JnV0aIOSRHnVjO3osp7SOmOhRtX/LYul5KlyjxKzw=)
  #     password: ENC(o4JnV0aIOSRHnVjO3osp7SOmOhRtX/LYul5KlyjxKzw=)
  #     maximum-pool-size: 10     #최대 커넥션 수
  #     minimum-idle: 5           #최소 유휴 커넥션 수
  #     idle-timeout: 600000      #유휴 커넥션 유지 시간(밀리초)
  #     max-lifetime: 1000000     #커넥션 최대수명(밀리초)
  #     connection-timeout: 30000 #커넥션 대기시간(밀리초)

    
# Kubernates Probes
management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      probes:
        enabled: true
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    tags:
      application: ${spring.application.name}
      pod: ${hostname}
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

# MyBatis Configuration
mybatis:
  configuration:
    map-underscore-to-camel-case: true

dpla:
  support:
    serviceNm: D.pla Api
    serviceCd: PGXXXXXX
    aes256ciper:
      secretKey: lHHO/UpOANsEBJjZj3+7c4vFbmsGeiwOhRyQb1LkTjE= # 프로젝트 별 수정
      iv: gpb5et443vrju19d # 프로젝트 별 수정

# Logging
logging:
   config: classpath:conf/log4j2-local.xml


lamp:
  serviceDomain: mddp.api