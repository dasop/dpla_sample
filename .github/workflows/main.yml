name: <workflow 이름 지정>
 
on:
  push:
    branches: [ "main" ]  # 어떤 branch에 push 되면 이 actions가 작동할지 설정합니다.
  pull_request:
    branches: [ "" ]      # 어떤 branch가 pull_request 되면 이 actions가 작동할지 설정합니다.
  
jobs:
  build:
    runs-on: [self-hosted, Linux, X64]   # self-hosted runner (VM) 을 사용하기 위한 라벨 설정
 
    steps:
    - name: Checkout code
      uses: actions/checkout@v3          # 소스코드 checkout 단계
  
    - name: Set up JDK 17                # setup languages 단계
      uses: actions/setup-java@v4
      with:
        distribution: 'jdkfile'
        jdkFile: /actions-runner/languages/java/17.0.10/microsoft-jdk-17.0.10-linux-x64.tar.gz
        java-version: '17.0.10'
        architecture: x64
  
    - name: Set up Maven
      uses: hb0730/maven-action@v1.0.2  # setup build tools 단계
      with:
        maven-file: /actions-runner/build-tools/maven/apache-maven-3.8.1-bin.tar.gz
         
    - name: Build with Maven            # 소스코드 빌드 단계
      run: ./mvnw clean package
 
    - name: Build Docker Image          # 컨테이너 이미지 빌드 단계
      run: docker build -t <IMAGE_NAME>:<TAG_NAME> .
  
    - name: Log in to Azure Container Registry        # Azure 로그인 단계
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.AZURE_ACR_SERVER }}
        username: ${{ secrets.AZURE_ACR_USERNAME }}
        password: ${{ secrets.AZURE_ACR_PASSWORD }}
  
    - name: Tagging & Push Docker image               # push to ACR 단계
      run: |
        docker tag <IMAGE_NAME>:<TAG_NAME> ${{ secrets.AZURE_ACR_SERVER }}/<IMAGE_NAME>:<TAG_NAME>
        docker push ${{ secrets.AZURE_ACR_SERVER }}/<IMAGE_NAME>:<TAG_NAME>
  
    # - name: Clean up Docker
    #   run: docker system prune -af
