name: Java CI with Maven
 
on: workflow_dispatch
  inputs:
    env:
      type: choice
      description : 'env'
      options:
      - "local"
      - "dev"
      - "tb"
      - "prod"
    tag:
      description: "Docker TAG"
      required: false
      default: ""
    branch:
      description: "Branch"
      required: true
      deault: "main"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
 
    steps:
    - name: Checkout code
      uses: actions/checkout@v3          # 소스코드 checkout 단계
  
    - name: Set up JDK 17                # setup languages 단계
      uses: actions/setup-java@v4
      with:
        distribution: 'oracle'
        java-version: '17'
        cache: maven
        
    - name: Setup timezone
    uses: zcong1993/setup-timezone@master
    with:
      timezone: Asia/Seoul 
         
    - name: set env  # TAG 를 현재 시간으로 설정
      if: ${{ inputs.tag == '' }}
      run: echo "NOW=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      shell: bash
     
    - if: ${{ inputs.tag != '' }}
      run: echo "NOW=${{ inputs.tag }}" >> $GITHUB_ENV
      shell: bash

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: ${{ env.NOW }}
         
    - name: Build with Maven            # 소스코드 빌드 단계
      run: mvn -B package --file pom.xml
 
    # - name: Build Docker Image          # 컨테이너 이미지 빌드 단계
    #   run: docker build -t <IMAGE_NAME>:<TAG_NAME> .

    - name: Build and Push to ACR
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          SPRING_PROFILES_ACTIVE: ${{ inputs.env }}
  
    # - name: Log in to Azure Container Registry        # Azure 로그인 단계
    #   uses: docker/login-action@v2
    #   with:
    #     registry: ${{ secrets.AZURE_ACR_SERVER }}
    #     username: ${{ secrets.AZURE_ACR_USERNAME }}
    #     password: ${{ secrets.AZURE_ACR_PASSWORD }}
  
    # - name: Tagging & Push Docker image               # push to ACR 단계
    #   run: |
    #     docker tag <IMAGE_NAME>:<TAG_NAME> ${{ secrets.AZURE_ACR_SERVER }}/<IMAGE_NAME>:<TAG_NAME>
    #     docker push ${{ secrets.AZURE_ACR_SERVER }}/<IMAGE_NAME>:<TAG_NAME>
  
    # - name: Clean up Docker
    #   run: docker system prune -af
